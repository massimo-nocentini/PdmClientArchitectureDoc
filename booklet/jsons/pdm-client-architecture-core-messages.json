{	"classes" : {		"PdmAbstractRootAppBuilder" : {			"hash" : 8229632,			"definition" : "PdmSubsystem subclass: #PdmAbstractRootAppBuilder\r\tinstanceVariableNames: 'rootApplication subappBuilder builtUIs subappBuilders announcer'\r\tclassVariableNames: ''\r\tpackage: 'Documaps Startup'",			"comment" : [				"I am the abstract base class of concrete subapp builders "			],			"category" : "Documaps Startup"		},		"PdmAbstractSystem" : {			"hash" : 8221952,			"definition" : "Object subclass: #PdmAbstractSystem\r\tinstanceVariableNames: 'announcer setupHandler subsystems topEventRouter debugMode'\r\tclassVariableNames: 'SystemClass'\r\tpackage: 'Documaps Startup'",			"comment" : [				"I am the abstract base class for all concrete PDM systems, like the main client application or the delta server."			],			"category" : "Documaps Startup"		},		"PdmSystemConfigJsonFile" : {			"hash" : 8225024,			"definition" : "PdmSystemConfig subclass: #PdmSystemConfigJsonFile\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Documaps Startup'",			"comment" : [				"I read the data for the PdmSubsystemConfig objects from a JSON file."			],			"category" : "Documaps Startup"		},		"PdmSystemConfigCode" : {			"hash" : 8224000,			"definition" : "PdmSystemConfig subclass: #PdmSystemConfigCode\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Documaps Startup'",			"comment" : [				"I am the base for specific subclasses reimplementing the main API #readSubsystemConfigsForTokens:orDo:.",				"My own implementation of this method only instantiates the concrete instance of the actual class."			],			"category" : "Documaps Startup"		},		"PdmSystemConfigDefault" : {			"hash" : 8224512,			"definition" : "PdmSystemConfig subclass: #PdmSystemConfigDefault\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Documaps Startup'",			"comment" : [				"I provide a simple default for a minimum set of PdmSubsystemConfig objects."			],			"category" : "Documaps Startup"		},		"PdmSystemConfigCodeForTests" : {			"hash" : 8235264,			"definition" : "PdmSystemConfigCode subclass: #PdmSystemConfigCodeForTests\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Documaps Startup-Tests'",			"comment" : [				"I am a specific implementation of PdmSystemConfigCode used for tests only."			],			"category" : "Documaps Startup-Tests"		},		"PdmSubsystem" : {			"hash" : 8229120,			"definition" : "Object subclass: #PdmSubsystem\r\tinstanceVariableNames: 'rootSystem setupProblemText subsystemConfiguration'\r\tclassVariableNames: ''\r\tpackage: 'Documaps Startup'",			"comment" : [				"I am the abstract base class of all subsystem classes of the PDM application, created on basis of a PdmSubsystemConfig.",				"After creation, I am only valid if #setupProblemText yields nil. In this case, the PdmSystem may add me as subsystem via #addSubsystem:.",				"At that moment, my prerequisites are checked, and I am connected with the DocumapsSystem as my rootSystem.",				"",				"Subclass implementations that normally will have to override implementation of base class:",				"",				"\tprerequisiteSubsystemKeys",				"\tcheckConfiguration",				"\tsetupForConfiguration:"			],			"category" : "Documaps Startup"		},		"PdmSubsystem class" : {			"hash" : 8228864,			"definition" : "PdmSubsystem class\r\tinstanceVariableNames: ''",			"comment" : [				"I am the abstract base class of all subsystem classes of the PDM application, created on basis of a PdmSubsystemConfig.",				"After creation, I am only valid if #setupProblemText yields nil. In this case, the PdmSystem may add me as subsystem via #addSubsystem:.",				"At that moment, my prerequisites are checked, and I am connected with the DocumapsSystem as my rootSystem.",				"",				"Subclass implementations that normally will have to override implementation of base class:",				"",				"\tprerequisiteSubsystemKeys",				"\tcheckConfiguration",				"\tsetupForConfiguration:"			],			"category" : "Documaps Startup"		},		"PdmSystemConfig" : {			"hash" : 8223488,			"definition" : "PdmAbstractSystemConfig subclass: #PdmSystemConfig\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Documaps Startup'",			"comment" : [				"I am the base class representing different ways to find the subsystem configurations for startup of PdmSystem.",				"The following modes for fetching configuration data are supported by subclass implementations (maybe not all in the early development phase):",				"",				"\tPdmSystemConfigJsonFile\t\tFrom json file [ will need filename ]",				"\tPdmSystemConfigJsonChoose \tFrom json file to be chosen by prompt (useful for developers)",				"\tPdmSystemConfigDatabase \t\tFrom database [ will need name of configuration database, host, port, dbuser, dbpassword, and token identifying client ]",				"\tPdmSystemConfigCode \t\t\tFrom code [ will need name of a subclass of PdmSystemConfigCode responding to main API selector ]",				"\tPdmSystemConfigDefault \t\tDefault, if nothing else has been chosen ",				"",				"Mode name is the first token of contents of environment variable 'PdmSystemConfigMode'. Specific modes may expect further tokens to be present.",				"Productive usage of the application will always need this variable set.",				"",				"Main API: ",				"\tPdmSystemConfig findSubsystemConfigsOrDo: twoArgsBlock",				"\t\treturns OrderedCollection of PdmSubsystemConfig",				"",				"\t\t\ttwoArgsBlock first arg is symbol describing problem, last may contain a string value.",				"\t\t\tEmpty result will also be considered as an error and routed to the block.",				"\t",				"\t(PdmSystemConfig subclass instance) readSubsystemConfigsForTokens: tokenList orDo: twoArgsBlock",				"\t\treturns OrderedCollection of PdmSubsystemConfig",				"\t",				"\t\t\tsubclass responsibility called internally after concrete subclass has been found and instantiated."			],			"category" : "Documaps Startup"		}	},	"messages" : {		"isRootAppBuilder" : {			"senders" : [				"BaselineOfDocumaps>>#scriptDocumentationExportCoreMessages",				"PdmDocumapsPart>>#initializeValues",				"PdmRibbonPart>>#initializeValues"			],			"implementors" : {				"PdmSubsystem" : {					"sourceCode" : [						"isRootAppBuilder",						"",						"\t^ false"					],					"body" : [						"^ false"					],					"isTestMethod" : false,					"category" : "testing",					"comment" : [ ],					"hash" : 9088396,					"argumentNames" : [ ]				},				"PdmAbstractRootAppBuilder" : {					"sourceCode" : [						"isRootAppBuilder",						"",						"\t^ true"					],					"body" : [						"^ true"					],					"isTestMethod" : false,					"category" : "testing",					"comment" : [ ],					"hash" : 9088906,					"argumentNames" : [ ]				}			}		},		"readSubsystemConfigsForTokens:" : {			"senders" : [				"BaselineOfDocumaps>>#scriptDocumentationExportCoreMessages",				"PdmSystemConfig class>>#findSubsystemConfigsOrDo:",				"PdmSystemConfig class>>#defaultConfigurations",				"PdmSystemConfigCode>>#readSubsystemConfigsForTokens:"			],			"implementors" : {				"PdmSystemConfigCode" : {					"sourceCode" : [						"readSubsystemConfigsForTokens: tokenList",						"",						"\t\"First token must be name of subclass of this class.",						"\tThis subclass must use a reimplementation of this method in order to avoid endless recursion.\"",						"",						"\t| nameToSearch sc |",						"\ttokenList isEmpty ifTrue: [ ",						"\t\tself",						"\t\t\tpdmError: #PdmSystemConfigErrorEmptyTokenList",						"\t\t\tattribute: self class name ].",						"\tnameToSearch := tokenList first.",						"\tsc := self class allSubclasses",						"\t\t      detect: [ :c | c name = nameToSearch ]",						"\t\t      ifNone: [ ",						"\t\t\t      self",						"\t\t\t\t      pdmError: #PdmSystemConfigErrorUnknownCodeClass",						"\t\t\t\t      attribute: nameToSearch ].",						"\tself class == PdmSystemConfigCode ifFalse: [ \"Avoid endless recursion due to missing implementation of this method in subclass\"",						"\t\tself",						"\t\t\tpdmError: #PdmSystemConfigErrorMissingImplementation",						"\t\t\tattribute: self class name ].",						"\t^ sc new readSubsystemConfigsForTokens: tokenList"					],					"body" : [						"| nameToSearch sc |",						"tokenList isEmpty ifTrue: [ ",						"\tself",						"\t\tpdmError: #PdmSystemConfigErrorEmptyTokenList",						"\t\tattribute: self class name ].",						"nameToSearch := tokenList first.",						"sc := self class allSubclasses",						"\t      detect: [ :c | c name = nameToSearch ]",						"\t      ifNone: [ ",						"\t\t      self",						"\t\t\t      pdmError: #PdmSystemConfigErrorUnknownCodeClass",						"\t\t\t      attribute: nameToSearch ].",						"self class == PdmSystemConfigCode ifFalse: [ \"Avoid endless recursion due to missing implementation of this method in subclass\"",						"\tself",						"\t\tpdmError: #PdmSystemConfigErrorMissingImplementation",						"\t\tattribute: self class name ].",						"^ sc new readSubsystemConfigsForTokens: tokenList"					],					"isTestMethod" : false,					"category" : "private",					"comment" : [						"First token must be name of subclass of this class.",						"\tThis subclass must use a reimplementation of this method in order to avoid endless recursion."					],					"hash" : 26583498,					"argumentNames" : [						"tokenList"					]				},				"PdmSystemConfigJsonFile" : {					"sourceCode" : [						"readSubsystemConfigsForTokens: tokenList",						"",						"\t\"Expects at least one token for a filename. Multiple files are allowed, all subsystemConfigs will be aggregated into result.\"",						"",						"\t| configs |",						"\ttokenList isEmpty ifTrue: [ ",						"\t\tself",						"\t\t\tpdmError: #PdmSystemConfigErrorEmptyTokenList",						"\t\t\tattribute: self class name ].",						"\tconfigs := OrderedCollection new.",						"\ttokenList do: [ :nextToken | ",						"\t\t| nextFileRef |",						"\t\tnextFileRef := nextToken asFileReference.",						"\t\tnextFileRef path isRelative ifTrue: [ ",						"\t\t\tnextFileRef := PdmSystem pdmUserDocumentsPath asFileReference ",						"\t\t\t\t               resolveReference: nextFileRef ].",						"\t\t(nextFileRef exists and: [ nextFileRef isDirectory not ]) ifFalse: [ ",						"\t\t\tself",						"\t\t\t\tpdmError: #PdmSystemConfigErrorMissingFile",						"\t\t\t\tattribute: nextFileRef fullName ].",						"\t\tconfigs addAll: (self class",						"\t\t\t\t createSubsystemConfigsOnJsonFile: nextFileRef",						"\t\t\t\t topKey: 'PdmSystemConfig') ].",						"\t^ configs"					],					"body" : [						"| configs |",						"tokenList isEmpty ifTrue: [ ",						"\tself",						"\t\tpdmError: #PdmSystemConfigErrorEmptyTokenList",						"\t\tattribute: self class name ].",						"configs := OrderedCollection new.",						"tokenList do: [ :nextToken | ",						"\t| nextFileRef |",						"\tnextFileRef := nextToken asFileReference.",						"\tnextFileRef path isRelative ifTrue: [ ",						"\t\tnextFileRef := PdmSystem pdmUserDocumentsPath asFileReference ",						"\t\t\t               resolveReference: nextFileRef ].",						"\t(nextFileRef exists and: [ nextFileRef isDirectory not ]) ifFalse: [ ",						"\t\tself",						"\t\t\tpdmError: #PdmSystemConfigErrorMissingFile",						"\t\t\tattribute: nextFileRef fullName ].",						"\tconfigs addAll: (self class",						"\t\t\t createSubsystemConfigsOnJsonFile: nextFileRef",						"\t\t\t topKey: 'PdmSystemConfig') ].",						"^ configs"					],					"isTestMethod" : false,					"category" : "private",					"comment" : [						"Expects at least one token for a filename. Multiple files are allowed, all subsystemConfigs will be aggregated into result."					],					"hash" : 26322532,					"argumentNames" : [						"tokenList"					]				},				"PdmSystemConfigCodeForTests" : {					"sourceCode" : [						"readSubsystemConfigsForTokens: tokenList",						"",						"\t^ OrderedCollection with: (PdmSubsystemConfig",						"\t\t\t   withParams: OrderedCollection new",						"\t\t\t   for: self class subsystemNameForTests)"					],					"body" : [						"^ OrderedCollection with: (PdmSubsystemConfig",						"\t\t   withParams: OrderedCollection new",						"\t\t   for: self class subsystemNameForTests)"					],					"isTestMethod" : false,					"category" : "private",					"comment" : [ ],					"hash" : 26069046,					"argumentNames" : [						"tokenList"					]				},				"PdmSystemConfigDefault" : {					"sourceCode" : [						"readSubsystemConfigsForTokens: tokenList",						"",						"\t\"No tokens expected here\"",						"",						"\t| configs |",						"\tconfigs := OrderedCollection new.",						"",						"\tconfigs add: (PdmSubsystemConfig for: 'PDM Logging' withParams: { ",						"\t\t\t\t (PdmConfigParam fullString: 'Folder = logs').",						"\t\t\t\t (PdmConfigParam fullString: 'Prefix = DeltaServer') }).",						"\tconfigs add: (PdmSubsystemConfig",						"\t\t\t for: 'Localization'",						"\t\t\t withParams: { (PdmConfigParam fullString: 'Locale = de-DE') }).",						"",						"\tconfigs add: (PdmSubsystemConfig for: 'PDM Tasks' withParams: {  }).",						"\tconfigs add: (PdmSubsystemConfig for: 'PDM UI' withParams: {  }).",						"",						"\tconfigs add: (PdmSubsystemConfig for: 'Glorp' withParams: { ",						"\t\t\t\t (PdmConfigParam fullString: 'HostName = localhost').",						"\t\t\t\t (PdmConfigParam fullString: 'PortNumber = 5433').",						"\t\t\t\t (PdmConfigParam fullString: 'DatabaseName = pdmCC').",						"\t\t\t\t (PdmConfigParam fullString: 'UserName = pdm').",						"\t\t\t\t (PdmConfigParam fullString: 'AllowPersistentLoginConfig = true') }).",						"",						"\tconfigs add: (PdmSubsystemConfig",						"\t\t\t for: 'Cached Properties'",						"\t\t\t withParams: { (PdmConfigParam fullString: 'SourceName = Glorp') }).",						"",						"\tconfigs add: (PdmSubsystemConfig",						"\t\t\t for: 'Resource Icon Base'",						"\t\t\t withParams:",						"\t\t\t { (PdmConfigParam fullString: 'SVGIconBaseType = PdmSVGIcons') }).",						"",						"\tconfigs add: (PdmSubsystemConfig for: 'Files' withParams: { ",						"\t\t\t\t (PdmConfigParam fullString:",						"\t\t\t\t\t  'SubsystemClass = PdmDeltaClientFileSubsystem').",						"\t\t\t\t (PdmConfigParam fullString: 'ProjectBase = d:/delta/work/file').",						"\t\t\t\t (PdmConfigParam fullString: 'DeltaServerHost = localhost').",						"\t\t\t\t (PdmConfigParam fullString: 'DeltaServerPort = 11122').",						"\t\t\t\t (PdmConfigParam fullString:",						"\t\t\t\t\t  'ClientInternalBase = d:/delta/client').",						"\t\t\t\t (PdmConfigParam fullString:",						"\t\t\t\t\t  'ClientTransferBase = d:/delta/client').",						"\t\t\t\t (PdmConfigParam fullString: 'WorkBase = d:/delta/work') }).",						"\tconfigs add:",						"\t\t(PdmSubsystemConfig",						"\t\t\t for: 'PDM Workers Manager System'",						"\t\t\t withParams: {  }).",						"",						"\tconfigs add: (PdmSubsystemConfig",						"\t\t\t for: 'PDM Document Previews System'",						"\t\t\t withParams: {  }).",						"",						"",						"\tconfigs add: (PdmSubsystemConfig",						"\t\t\t for: 'PDM File Opening System'",						"\t\t\t withParams:",						"\t\t\t { (PdmConfigParam fullString: 'UseWorkerImage = false') }).",						"\tconfigs add: (PdmSubsystemConfig",						"\t\t\t for: 'FileTypeIcons'",						"\t\t\t withParams:",						"\t\t\t { (PdmConfigParam fullString:",						"\t\t\t\t  'RasterIconBaseType = PdmFileTypeIcons') }).",						"\tconfigs add: (PdmSubsystemConfig",						"\t\t\t for: 'Application Settings'",						"\t\t\t withParams:",						"\t\t\t { (PdmConfigParam fullString:",						"\t\t\t\t  'SettingsJson =ApplicationSettings.json') }).",						"\tconfigs add:",						"\t\t(PdmSubsystemConfig for: 'Progress-Status' withParams: {  }).",						"\tconfigs add:",						"\t\t(PdmSubsystemConfig for: 'PDM Application' withParams: { ",						"\t\t\t\t (PdmConfigParam fullString:",						"\t\t\t\t\t  'SubappBuilderType = PdmSubappConfigTypeExplorer').",						"\t\t\t\t (PdmConfigParam fullString:",						"\t\t\t\t\t  'ActiveSubappBuilderTypes = PdmSubappConfigTypeExplorer,PdmSubappConfigTypeCalendar') }).",						"\t^ configs"					],					"body" : [						"| configs |",						"configs := OrderedCollection new.",						"",						"configs add: (PdmSubsystemConfig for: 'PDM Logging' withParams: { ",						"\t\t\t (PdmConfigParam fullString: 'Folder = logs').",						"\t\t\t (PdmConfigParam fullString: 'Prefix = DeltaServer') }).",						"configs add: (PdmSubsystemConfig",						"\t\t for: 'Localization'",						"\t\t withParams: { (PdmConfigParam fullString: 'Locale = de-DE') }).",						"",						"configs add: (PdmSubsystemConfig for: 'PDM Tasks' withParams: {  }).",						"configs add: (PdmSubsystemConfig for: 'PDM UI' withParams: {  }).",						"",						"configs add: (PdmSubsystemConfig for: 'Glorp' withParams: { ",						"\t\t\t (PdmConfigParam fullString: 'HostName = localhost').",						"\t\t\t (PdmConfigParam fullString: 'PortNumber = 5433').",						"\t\t\t (PdmConfigParam fullString: 'DatabaseName = pdmCC').",						"\t\t\t (PdmConfigParam fullString: 'UserName = pdm').",						"\t\t\t (PdmConfigParam fullString: 'AllowPersistentLoginConfig = true') }).",						"",						"configs add: (PdmSubsystemConfig",						"\t\t for: 'Cached Properties'",						"\t\t withParams: { (PdmConfigParam fullString: 'SourceName = Glorp') }).",						"",						"configs add: (PdmSubsystemConfig",						"\t\t for: 'Resource Icon Base'",						"\t\t withParams:",						"\t\t { (PdmConfigParam fullString: 'SVGIconBaseType = PdmSVGIcons') }).",						"",						"configs add: (PdmSubsystemConfig for: 'Files' withParams: { ",						"\t\t\t (PdmConfigParam fullString:",						"\t\t\t\t  'SubsystemClass = PdmDeltaClientFileSubsystem').",						"\t\t\t (PdmConfigParam fullString: 'ProjectBase = d:/delta/work/file').",						"\t\t\t (PdmConfigParam fullString: 'DeltaServerHost = localhost').",						"\t\t\t (PdmConfigParam fullString: 'DeltaServerPort = 11122').",						"\t\t\t (PdmConfigParam fullString: 'ClientInternalBase = d:/delta/client').",						"\t\t\t (PdmConfigParam fullString: 'ClientTransferBase = d:/delta/client').",						"\t\t\t (PdmConfigParam fullString: 'WorkBase = d:/delta/work') }).",						"configs add:",						"\t(PdmSubsystemConfig",						"\t\t for: 'PDM Workers Manager System'",						"\t\t withParams: {  }).",						"",						"configs add: (PdmSubsystemConfig",						"\t\t for: 'PDM Document Previews System'",						"\t\t withParams: {  }).",						"",						"",						"configs add: (PdmSubsystemConfig",						"\t\t for: 'PDM File Opening System'",						"\t\t withParams:",						"\t\t { (PdmConfigParam fullString: 'UseWorkerImage = false') }).",						"configs add: (PdmSubsystemConfig",						"\t\t for: 'FileTypeIcons'",						"\t\t withParams:",						"\t\t { (PdmConfigParam fullString:",						"\t\t\t  'RasterIconBaseType = PdmFileTypeIcons') }).",						"configs add: (PdmSubsystemConfig",						"\t\t for: 'Application Settings'",						"\t\t withParams:",						"\t\t { (PdmConfigParam fullString:",						"\t\t\t  'SettingsJson =ApplicationSettings.json') }).",						"configs add:",						"\t(PdmSubsystemConfig for: 'Progress-Status' withParams: {  }).",						"configs add:",						"\t(PdmSubsystemConfig for: 'PDM Application' withParams: { ",						"\t\t\t (PdmConfigParam fullString:",						"\t\t\t\t  'SubappBuilderType = PdmSubappConfigTypeExplorer').",						"\t\t\t (PdmConfigParam fullString:",						"\t\t\t\t  'ActiveSubappBuilderTypes = PdmSubappConfigTypeExplorer,PdmSubappConfigTypeCalendar') }).",						"^ configs"					],					"isTestMethod" : false,					"category" : "private",					"comment" : [						"No tokens expected here"					],					"hash" : 26322390,					"argumentNames" : [						"tokenList"					]				},				"PdmSystemConfig" : {					"sourceCode" : [						"readSubsystemConfigsForTokens: tokenList",						"",						"\t\"This API is on instance side in order to allow initialization of subclass instances with specific parameters.\"",						"",						"\tself subclassResponsibility"					],					"body" : [						"self subclassResponsibility"					],					"isTestMethod" : false,					"category" : "private",					"comment" : [						"This API is on instance side in order to allow initialization of subclass instances with specific parameters."					],					"hash" : 26056772,					"argumentNames" : [						"tokenList"					]				}			}		},		"stopSubsystems" : {			"senders" : [				"BaselineOfDocumaps>>#scriptDocumentationExportCoreMessages",				"PdmAbstractRootAppBuilder>>#privateSetup",				"PdmRootAppBuilder>>#privateSetup"			],			"implementors" : {				"PdmAbstractSystem" : {					"sourceCode" : [						"stopSubsystems",						"",						"\tsubsystems do: [ :e | e stop ]"					],					"body" : [						"subsystems do: [ :e | e stop ]"					],					"isTestMethod" : false,					"category" : "API",					"comment" : [ ],					"hash" : 9016049,					"argumentNames" : [ ]				}			}		},		"checkPrerequisitesIn:" : {			"senders" : [				"BaselineOfDocumaps>>#scriptDocumentationExportCoreMessages",				"PdmAbstractSystem>>#checkPrerequisitiesOf:in:"			],			"implementors" : {				"PdmSubsystem class" : {					"sourceCode" : [						"checkPrerequisitesIn: aPdmSystem",						"",						"\t\"override me in subclasses to check if the system has all the required subsystems already loaded and cofigured\"",						"",						"\tself prerequisiteSubsystemKeys do: [ :subsystemName | ",						"\t\t(aPdmSystem hasSubsystemNamed: subsystemName) ifFalse: [ ",						"\t\t\taPdmSystem",						"\t\t\t\thandleSetupErrorFor: self subsystemName",						"\t\t\t\twith:",						"\t\t\t\t'Missing prerequisite subsystem named '",						"\t\t\t\t, subsystemName printString ] ]"					],					"body" : [						"self prerequisiteSubsystemKeys do: [ :subsystemName | ",						"\t(aPdmSystem hasSubsystemNamed: subsystemName) ifFalse: [ ",						"\t\taPdmSystem",						"\t\t\thandleSetupErrorFor: self subsystemName",						"\t\t\twith:",						"\t\t\t'Missing prerequisite subsystem named ' , subsystemName printString ] ]"					],					"isTestMethod" : false,					"category" : "instance creation",					"comment" : [						"override me in subclasses to check if the system has all the required subsystems already loaded and cofigured"					],					"hash" : 26062608,					"argumentNames" : [						"aPdmSystem"					]				}			}		}	}}